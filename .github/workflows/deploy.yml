name: Deploy automático AWS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3

      - name: Terraform Init & Apply
        working-directory: terraform
        run: |
          terraform init
          terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Obter IP Público
        working-directory: terraform
        run: |
          IP=$(terraform output -raw ec2_public_ip)
          echo "EC2_IP=$IP" >> $GITHUB_ENV

      - name: Parar e limpar Docker (se já existir)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          script: |
            sudo docker stop login-container || true
            sudo docker rm login-container || true
            sudo docker rmi login-app || true

      - name: Copiar código via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          source: "./app"
          target: "/home/ubuntu/"

      - name: Executar aplicação Docker via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/app
            sudo docker build -t login-app .
            sudo docker run -d -p 80:80 --restart always --name login-container login-app
